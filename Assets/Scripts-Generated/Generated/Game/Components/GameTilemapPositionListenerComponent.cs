//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TilemapPositionListenerComponent tilemapPositionListener { get { return (TilemapPositionListenerComponent)GetComponent(GameComponentsLookup.TilemapPositionListener); } }
    public bool hasTilemapPositionListener { get { return HasComponent(GameComponentsLookup.TilemapPositionListener); } }

    public void AddTilemapPositionListener(System.Collections.Generic.List<ITilemapPositionListener> newValue) {
        var index = GameComponentsLookup.TilemapPositionListener;
        var component = (TilemapPositionListenerComponent)CreateComponent(index, typeof(TilemapPositionListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceTilemapPositionListener(System.Collections.Generic.List<ITilemapPositionListener> newValue) {
        var index = GameComponentsLookup.TilemapPositionListener;
        var component = (TilemapPositionListenerComponent)CreateComponent(index, typeof(TilemapPositionListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveTilemapPositionListener() {
        RemoveComponent(GameComponentsLookup.TilemapPositionListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTilemapPositionListener;

    public static Entitas.IMatcher<GameEntity> TilemapPositionListener {
        get {
            if (_matcherTilemapPositionListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TilemapPositionListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTilemapPositionListener = matcher;
            }

            return _matcherTilemapPositionListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddTilemapPositionListener(ITilemapPositionListener value) {
        var listeners = hasTilemapPositionListener
            ? tilemapPositionListener.value
            : new System.Collections.Generic.List<ITilemapPositionListener>();
        listeners.Add(value);
        ReplaceTilemapPositionListener(listeners);
    }

    public void RemoveTilemapPositionListener(ITilemapPositionListener value, bool removeComponentWhenEmpty = true) {
        var listeners = tilemapPositionListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveTilemapPositionListener();
        } else {
            ReplaceTilemapPositionListener(listeners);
        }
    }
}
