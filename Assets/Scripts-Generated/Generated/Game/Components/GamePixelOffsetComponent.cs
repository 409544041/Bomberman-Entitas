//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public PixelOffsetComponent pixelOffset { get { return (PixelOffsetComponent)GetComponent(GameComponentsLookup.PixelOffset); } }
    public bool hasPixelOffset { get { return HasComponent(GameComponentsLookup.PixelOffset); } }

    public void AddPixelOffset(UnityEngine.Vector2 newValue) {
        var index = GameComponentsLookup.PixelOffset;
        var component = (PixelOffsetComponent)CreateComponent(index, typeof(PixelOffsetComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplacePixelOffset(UnityEngine.Vector2 newValue) {
        var index = GameComponentsLookup.PixelOffset;
        var component = (PixelOffsetComponent)CreateComponent(index, typeof(PixelOffsetComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemovePixelOffset() {
        RemoveComponent(GameComponentsLookup.PixelOffset);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPixelOffset;

    public static Entitas.IMatcher<GameEntity> PixelOffset {
        get {
            if (_matcherPixelOffset == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PixelOffset);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPixelOffset = matcher;
            }

            return _matcherPixelOffset;
        }
    }
}
