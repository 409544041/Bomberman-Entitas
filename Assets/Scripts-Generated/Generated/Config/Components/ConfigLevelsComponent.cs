//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigContext {

    public ConfigEntity levelsEntity { get { return GetGroup(ConfigMatcher.Levels).GetSingleEntity(); } }
    public LevelsComponent levels { get { return levelsEntity.levels; } }
    public bool hasLevels { get { return levelsEntity != null; } }

    public ConfigEntity SetLevels(ILevels newValue) {
        if (hasLevels) {
            throw new Entitas.EntitasException("Could not set Levels!\n" + this + " already has an entity with LevelsComponent!",
                "You should check if the context already has a levelsEntity before setting it or use context.ReplaceLevels().");
        }
        var entity = CreateEntity();
        entity.AddLevels(newValue);
        return entity;
    }

    public void ReplaceLevels(ILevels newValue) {
        var entity = levelsEntity;
        if (entity == null) {
            entity = SetLevels(newValue);
        } else {
            entity.ReplaceLevels(newValue);
        }
    }

    public void RemoveLevels() {
        levelsEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigEntity {

    public LevelsComponent levels { get { return (LevelsComponent)GetComponent(ConfigComponentsLookup.Levels); } }
    public bool hasLevels { get { return HasComponent(ConfigComponentsLookup.Levels); } }

    public void AddLevels(ILevels newValue) {
        var index = ConfigComponentsLookup.Levels;
        var component = (LevelsComponent)CreateComponent(index, typeof(LevelsComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceLevels(ILevels newValue) {
        var index = ConfigComponentsLookup.Levels;
        var component = (LevelsComponent)CreateComponent(index, typeof(LevelsComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveLevels() {
        RemoveComponent(ConfigComponentsLookup.Levels);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ConfigMatcher {

    static Entitas.IMatcher<ConfigEntity> _matcherLevels;

    public static Entitas.IMatcher<ConfigEntity> Levels {
        get {
            if (_matcherLevels == null) {
                var matcher = (Entitas.Matcher<ConfigEntity>)Entitas.Matcher<ConfigEntity>.AllOf(ConfigComponentsLookup.Levels);
                matcher.componentNames = ConfigComponentsLookup.componentNames;
                _matcherLevels = matcher;
            }

            return _matcherLevels;
        }
    }
}
